{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClDJ,EAAMK,UAAY,UAClB,IAAIC,EAAWC,OAAOP,EAAMQ,OACxBC,EAAUF,OAAON,EAAKO,OACtBE,EAAYH,OAAOL,EAAOM,OAE9B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACzB,IAANA,IACFL,GAAYG,GAGdxB,EAAc0B,EAAGL,GACdM,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAU,IAGnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB/B,QAAeC,MAAU,IAGnDW,EAAIK,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  delay.innerHTML = 'min=\"0\"';\n  let getDelay = Number(delay.value);\n  let getStep = Number(step.value);\n  let getAmount = Number(amount.value);\n\n  for (let i = 1; i <= getAmount; i += 1) {\n    if (i !== 1) {\n      getDelay += getStep;\n    }\n\n    createPromise(i, getDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    evt.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","innerHTML","getDelay","Number","value","getStep","getAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.f06c18f9.js.map"}